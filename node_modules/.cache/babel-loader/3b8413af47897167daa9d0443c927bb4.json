{"ast":null,"code":"var _jsxFileName = \"/Users/markkrasner/Downloads/MDB5-REACT-UI-KIT-Free-4.0.0/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport { MDBRow, MDBCol, MDBInput, MDBCheckbox, MDBBtn, MDBTextArea } from 'mdb-react-ui-kit';\nimport { ethers } from \"ethers\";\nimport abi from \"./abi.json\";\nimport DateTimePicker from 'react-datetime-picker';\nimport Navbar from './Navbar.js';\nimport LoadingSpin from \"react-loading-spin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultValues = {\n  ReactDatepicker: new Date()\n};\nexport default function Form() {\n  _s();\n\n  const [propName, setPropName] = useState('');\n  const [propDescription, setPropDescription] = useState('');\n  const [transaction, setTransactionSuccess] = useState('');\n  const [propDate, setPropDate] = useState(new Date());\n\n  const submit = event => {\n    if (propName.replace(/[^a-zA-Z\\s]/gi, '') !== propName) {\n      alert('Your input most be composed of alphabetic characters only.');\n      window.location.reload(false);\n    }\n\n    if (propName.length > 50) {\n      alert('Your input must be 50 characters or less');\n      window.location.reload(false);\n    }\n\n    if (propDescription.length > 500) {\n      alert('Your description input must be 500 characters or less');\n      window.location.reload(false);\n    }\n\n    const DEPLOYED_ADDRESS = '0x1eC7b4E7AD7BEa7371e849F4c31f267b95380055';\n\n    async function connect() {\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n    }\n\n    connect();\n    setTransactionSuccess(1);\n    const thisProvider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = thisProvider.getSigner();\n    let writeContract = new ethers.Contract(DEPLOYED_ADDRESS, abi, signer);\n    console.log(signer);\n\n    if (!(value.getTime() > Date.now() + 259200)) {\n      alert('You must choose a date that is at least 3 days in the future.');\n    }\n\n    async function submitProp(name, description, deadline) {\n      let txResponse = await writeContract.createProposal(name, description, deadline);\n      let txReceipt = await txResponse.wait();\n\n      if (txReceipt.blockNumber > 0) {\n        setTransactionSuccess(txReceipt.blockNumber);\n      } else if (!(txReceipt.blockNumber > 0)) {\n        alert('Your submission was unsuccessful');\n        window.location.reload(false);\n      }\n    } //submitProp(propDescription);\n    //const dateInSecs = Math.floor(new Date().getTime() / 1000);\n\n\n    const other = Math.floor(value.getTime() / 1000);\n    event.preventDefault();\n  };\n\n  const [value, onChange] = useState(new Date());\n\n  if (transaction == 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(LoadingSpin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  } else if (!(transaction > 1)) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Submit a Proposal\",\n        message: \"If you hold a governance token you can submit a proposal here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n          wrapperClass: \"mb-4\",\n          id: \"propName\",\n          label: \"Proposal Name\",\n          onChange: event => setPropName(event.target.value),\n          value: propName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(MDBTextArea, {\n              label: \"Description\",\n              id: \"propDescription\",\n              onChange: event => setPropDescription(event.target.value),\n              value: propDescription,\n              rows: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Deadline (must leave at least a 3 days window):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n            onChange: onChange,\n            value: value,\n            id: \"dateSubmit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          className: \"mb-4\",\n          type: \"submit\",\n          id: \"globalSubmit\",\n          block: true,\n          children: \"Submit Proposal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  } else if (transaction > 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Submit a Proposal\",\n        message: \"Your proposal submission was successful\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n        className: \"mb-4\",\n        href: \"/submit-proposal\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Form, \"dNwjes1KhkVUNtN8nnJcE7mJMI4=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","Component","useEffect","useState","MDBRow","MDBCol","MDBInput","MDBCheckbox","MDBBtn","MDBTextArea","ethers","abi","DateTimePicker","Navbar","LoadingSpin","defaultValues","ReactDatepicker","Date","Form","propName","setPropName","propDescription","setPropDescription","transaction","setTransactionSuccess","propDate","setPropDate","submit","event","replace","alert","window","location","reload","length","DEPLOYED_ADDRESS","connect","ethereum","request","method","thisProvider","providers","Web3Provider","signer","getSigner","writeContract","Contract","console","log","value","getTime","now","submitProp","name","description","deadline","txResponse","createProposal","txReceipt","wait","blockNumber","other","Math","floor","preventDefault","onChange","target"],"sources":["/Users/markkrasner/Downloads/MDB5-REACT-UI-KIT-Free-4.0.0/src/components/Form.js"],"sourcesContent":["\nimport React, { Component, useEffect, useState } from 'react';\nimport {\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBCheckbox,\n  MDBBtn,\n  MDBTextArea\n} from 'mdb-react-ui-kit';\nimport { ethers } from \"ethers\";\nimport abi from \"./abi.json\";\nimport DateTimePicker from 'react-datetime-picker';\nimport Navbar from './Navbar.js';\nimport LoadingSpin from \"react-loading-spin\";\n\n\n\nconst defaultValues = {\n  ReactDatepicker: new Date()\n}\n\n\nexport default function Form() {\n\n  const [propName, setPropName] = useState('');\n  const [propDescription, setPropDescription] = useState('');\n  const [transaction, setTransactionSuccess] = useState('');\n  \n  const [propDate, setPropDate] = useState(new Date());\n\n  const submit = event => {\n    if(propName.replace(/[^a-zA-Z\\s]/gi, '') !== propName) {\n      alert('Your input most be composed of alphabetic characters only.')\n      window.location.reload(false);\n    }\n    if(propName.length > 50){\n      alert('Your input must be 50 characters or less')\n      window.location.reload(false);\n    }\n    if(propDescription.length > 500){\n      alert('Your description input must be 500 characters or less')\n      window.location.reload(false);\n    }\n\n    \n\n    const DEPLOYED_ADDRESS = '0x1eC7b4E7AD7BEa7371e849F4c31f267b95380055';\n    async function connect() {\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n    }\n    connect();\n    setTransactionSuccess(1);\n    const thisProvider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = thisProvider.getSigner();\n    let writeContract = new ethers.Contract(DEPLOYED_ADDRESS, abi, signer);\n\n    console.log(signer);\n\n    if(!(value.getTime() > Date.now() + 259200)){\n      alert('You must choose a date that is at least 3 days in the future.');\n    }\n\n    async function submitProp(name, description, deadline) {\n      \n      let txResponse = await writeContract.createProposal(name, description, deadline);\n      let txReceipt = await txResponse.wait();\n      if(txReceipt.blockNumber > 0){\n        setTransactionSuccess(txReceipt.blockNumber);\n      } else if (!(txReceipt.blockNumber > 0)){\n        alert('Your submission was unsuccessful');\n        window.location.reload(false);\n      }\n    }\n    \n    //submitProp(propDescription);\n    //const dateInSecs = Math.floor(new Date().getTime() / 1000);\n    const other = Math.floor(value.getTime() / 1000);\n    \n    event.preventDefault();\n\n    \n  }\n\n  \n  \n  const [value, onChange] = useState(new Date());\n  \n  if (transaction == 1){\n    return (\n      <>\n      <LoadingSpin />\n      </>\n    )\n  }\n  \n  else if(!(transaction > 1)){\n  return (\n    <>\n    <Navbar\n      title=\"Submit a Proposal\"\n      message=\"If you hold a governance token you can submit a proposal here\" />\n      \n    <form onSubmit={submit}>\n      <MDBInput wrapperClass='mb-4' id='propName' label='Proposal Name' onChange={event => setPropName(event.target.value)} value={propName} />\n      <MDBRow className='mb-4'>\n        <MDBCol>\n          <MDBTextArea label='Description' id='propDescription' onChange={event => setPropDescription(event.target.value)} value={propDescription} rows={4} />\n        </MDBCol>\n        \n      </MDBRow>\n      <div>\n      <p>Deadline (must leave at least a 3 days window):</p>\n      <DateTimePicker onChange={onChange} value={value} id='dateSubmit' />\n      </div>\n      <br></br>\n\n\n      <MDBBtn className='mb-4' type='submit' id='globalSubmit' block>\n        Submit Proposal\n      </MDBBtn>\n    </form>\n    </>\n  );\n}\n\n\nelse if (transaction > 1){\n  return (\n    <>\n    <Navbar\n      title=\"Submit a Proposal\"\n      message=\"Your proposal submission was successful\" />\n      <p>Success!</p>\n      <MDBBtn className='mb-4' href='/submit-proposal'>\n        Go Back\n      </MDBBtn>\n      </>\n  );\n}\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}